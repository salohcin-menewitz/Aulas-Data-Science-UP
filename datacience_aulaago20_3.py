# -*- coding: utf-8 -*-
"""dataCience_aulaAgo20-3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z8WjHX0ColN5SgEQQ7XLl9SToB2YHNSs
"""

from google.colab import files

uploaded = files.upload()

import pandas as pd
import io

df = pd.read_csv(io.BytesIO(uploaded['amazon_cells_labelled.txt']), sep = '\t')

print(df)

df.groupby('Target').describe()

contagem_classes = df.groupby('Target')['Target'].count()
total = contagem_classes.sum()
porcentagem_classes = contagem_classes / total * 100
print(porcentagem_classes)

!pip install scikit-learn==1.2.2
import numpy as np
from sklearn.model_selection import train_test_split
X = df['Text']
y = df['Target']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 42)

from sklearn.feature_extraction.text import TfidfVectorizer

X_train_indice = X_train.index
X_test_indice = X_test.index

X_train_text = df['Text'].iloc[X_train_indice]
X_test_text = df['Text'].iloc[X_test_indice]

vectorizer = TfidfVectorizer()
X_train_tfidf = vectorizer.fit_transform(X_train_text)
X_test_tfidf = vectorizer.transform(X_test_text)

from sklearn.ensemble import RandomForestClassifier

model = RandomForestClassifier()
model.fit(X_train_tfidf, y_train)

y_pred = model.predict(X_test_tfidf)

from sklearn.metrics import accuracy_score, precision_score, recall_score

accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)

print("Acurácia:", accuracy)
print("Precisão:", precision)
print("Recall:", recall)